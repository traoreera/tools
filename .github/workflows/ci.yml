name: CI/CD Pipeline for Core Tools

on:
  push:
    branches: [main, develp]
  pull_request:
    branches: [main, develp]

env:
  PYTHON_VERSION: "3.13"
  POETRY_VERSION: "1.8.0"

jobs:
  build-and-publish:
    name: Build, Test, Lint and Publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # 3Ô∏è‚É£ Install Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: false

      # 4Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          poetry lock --no-update
          poetry install --no-interaction --no-ansi

      # 5Ô∏è‚É£ Run CLI help (sanity check)
      - name: Run CLI help
        run: poetry run tools-cli --help

      # 6Ô∏è‚É£ Lint code
      - name: Lint code
        run: poetry run tools-cli lint-fix

      # 7Ô∏è‚É£ Run tests
      - name: Run tests
        run: poetry run pytest -v

      # 8Ô∏è‚É£ Build package
      - name: Build package
        run: poetry build --no-interaction

      # 9Ô∏è‚É£ Publish to TestPyPI (optional, always for testing)
      - name: Publish to TestPyPI
        if: github.ref != 'refs/heads/main'
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          echo "Configuring TestPyPI token..."
          poetry config pypi-token.testpypi $TEST_PYPI_TOKEN
          poetry publish --build --repository testpypi --no-interaction

      # üîü Publish to PyPI (only on main branch)
      - name: Publish to PyPI
        if: github.ref == 'refs/heads/main'
        env:
          PYPI_TOKEN: ${{ secrets.PYPIPASSWORD }}
        run: |
          echo "Configuring PyPI token..."
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build --repository pypi --no-interaction
